(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{499:function(r,a,t){"use strict";t.r(a);var e=t(42),s=Object(e.a)({},(function(){var r=this,a=r.$createElement,t=r._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h2",{attrs:{id:"常见应用框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见应用框架"}},[r._v("#")]),r._v(" 常见应用框架")]),r._v(" "),t("p",[r._v("应用框架是实际干活的，可以理解为 Mesos 之上跑的 "),t("code",[r._v("应用")]),r._v("。应用框架注册到 Mesos master 服务上即可使用。")]),r._v(" "),t("p",[r._v("用户大部分时候，只需要跟应用框架打交道。因此，选择合适的应用框架十分关键。")]),r._v(" "),t("p",[r._v("Mesos 目前支持的应用框架分为四大类：长期运行任务（以及 PaaS）、大数据处理、批量调度、数据存储。")]),r._v(" "),t("p",[r._v("随着 Mesos 自身的发展，越来越多的框架开始支持 Mesos，下面总结了目前常用的一些框架。")]),r._v(" "),t("h3",{attrs:{id:"长期运行的服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#长期运行的服务"}},[r._v("#")]),r._v(" 长期运行的服务")]),r._v(" "),t("h4",{attrs:{id:"aurora"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aurora"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"http://aurora.incubator.apache.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("Aurora"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("利用 Mesos 调度安排的任务，保证任务一直在运行。")]),r._v(" "),t("p",[r._v("提供 REST 接口，客户端和 webUI（8081 端口）")]),r._v(" "),t("h4",{attrs:{id:"marathon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#marathon"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://github.com/mesosphere/marathon",target:"_blank",rel:"noopener noreferrer"}},[r._v("Marathon"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("一个私有 PaaS 平台，保证运行的应用不被中断。")]),r._v(" "),t("p",[r._v("如果任务停止了，会自动重启一个新的相同任务。")]),r._v(" "),t("p",[r._v("支持任务为任意 bash 命令，以及容器。")]),r._v(" "),t("p",[r._v("提供 REST 接口，客户端和 webUI（8080 端口）")]),r._v(" "),t("h4",{attrs:{id:"singularity"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#singularity"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://github.com/HubSpot/Singularity",target:"_blank",rel:"noopener noreferrer"}},[r._v("Singularity"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("一个私有 PaaS 平台。")]),r._v(" "),t("p",[r._v("调度器，运行长期的任务和一次性任务。")]),r._v(" "),t("p",[r._v("提供 REST 接口，客户端和 webUI（7099、8080 端口），支持容器。")]),r._v(" "),t("h3",{attrs:{id:"大数据处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大数据处理"}},[r._v("#")]),r._v(" 大数据处理")]),r._v(" "),t("h4",{attrs:{id:"cray-chapel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cray-chapel"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://github.com/nqn/mesos-chapel",target:"_blank",rel:"noopener noreferrer"}},[r._v("Cray Chapel"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("支持 Chapel 并行编程语言的运行框架。")]),r._v(" "),t("h4",{attrs:{id:"dpark"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dpark"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://github.com/douban/dpark",target:"_blank",rel:"noopener noreferrer"}},[r._v("Dpark"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("Spark 的 Python 实现。")]),r._v(" "),t("h4",{attrs:{id:"hadoop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hadoop"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://github.com/mesos/hadoop",target:"_blank",rel:"noopener noreferrer"}},[r._v("Hadoop"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("经典的 map-reduce 模型的实现。")]),r._v(" "),t("h4",{attrs:{id:"spark"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spark"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"http://spark.apache.org",target:"_blank",rel:"noopener noreferrer"}},[r._v("Spark"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("跟 Hadoop 类似，但处理迭代类型任务会更好的使用内存做中间状态缓存，速度要快一些。")]),r._v(" "),t("h4",{attrs:{id:"storm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#storm"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://github.com/mesos/storm",target:"_blank",rel:"noopener noreferrer"}},[r._v("Storm"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("分布式流计算，可以实时处理数据流。")]),r._v(" "),t("h3",{attrs:{id:"批量调度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#批量调度"}},[r._v("#")]),r._v(" 批量调度")]),r._v(" "),t("h4",{attrs:{id:"chronos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chronos"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://github.com/airbnb/chronos",target:"_blank",rel:"noopener noreferrer"}},[r._v("Chronos"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("Cron 的分布式实现，负责任务调度，支持容错。")]),r._v(" "),t("h4",{attrs:{id:"jenkins"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://github.com/jenkinsci/mesos-plugin",target:"_blank",rel:"noopener noreferrer"}},[r._v("Jenkins"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("大名鼎鼎的 CI 引擎。使用 mesos-jenkins 插件，可以将 jenkins 的任务被 Mesos 集群来动态调度执行。")]),r._v(" "),t("h4",{attrs:{id:"jobserver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jobserver"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"http://www.grandlogic.com/content/html_docs/jobserver.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("JobServer"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("基于 Java 的调度任务和数据处理引擎。")]),r._v(" "),t("h4",{attrs:{id:"godocker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#godocker"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://bitbucket.org/osallou/go-docker",target:"_blank",rel:"noopener noreferrer"}},[r._v("GoDocker"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("基于 Docker 容器的集群维护工具。提供用户接口，除了支持 Mesos，还支持 Kubernetes、Swarm 等。")]),r._v(" "),t("h3",{attrs:{id:"数据存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据存储"}},[r._v("#")]),r._v(" 数据存储")]),r._v(" "),t("h4",{attrs:{id:"elasticsearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://github.com/mesos/elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[r._v("ElasticSearch"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("功能十分强大的分布式数据搜索引擎。")]),r._v(" "),t("p",[r._v("一方面通过分布式集群实现可靠的数据库，一方面提供灵活的 API，对数据进行整合和分析。ElasticSearch + LogStash + Kibana 目前合成为 ELK 工具栈。")]),r._v(" "),t("h4",{attrs:{id:"hypertable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hypertable"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"https://code.google.com/p/hypertable",target:"_blank",rel:"noopener noreferrer"}},[r._v("Hypertable"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("高性能的分布式数据库，支持结构化或者非结构化的数据存储。")]),r._v(" "),t("h4",{attrs:{id:"tachyon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tachyon"}},[r._v("#")]),r._v(" "),t("a",{attrs:{href:"http://tachyon-project.org/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Tachyon"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("内存为中心的分布式存储系统，利用内存访问的高速提供高性能。")])])}),[],!1,null,null,null);a.default=s.exports}}]);