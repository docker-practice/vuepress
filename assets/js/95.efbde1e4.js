(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{296:function(a,e,s){"use strict";s.r(e);var t=s(0),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"使用-buildx-构建多种系统架构支持的-docker-镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-buildx-构建多种系统架构支持的-docker-镜像"}},[a._v("#")]),a._v(" 使用 buildx 构建多种系统架构支持的 Docker 镜像")]),a._v(" "),s("p",[a._v("在之前的版本中构建多种系统架构支持的 Docker 镜像，要想使用统一的名字必须使用 "),s("router-link",{attrs:{to:"/image/manifest.html"}},[s("code",[a._v("$ docker manifest")])]),a._v(" 命令。")],1),a._v(" "),s("p",[a._v("在 Docker 19.03+ 版本中可以使用 "),s("code",[a._v("$ docker buildx build")]),a._v(" 命令使用 "),s("code",[a._v("BuildKit")]),a._v(" 构建镜像。")]),a._v(" "),s("p",[a._v("该命令支持 "),s("code",[a._v("--platform")]),a._v(" 参数可以同时构建支持多种系统架构的 Docker 镜像，大大简化了构建步骤。")]),a._v(" "),s("h2",{attrs:{id:"设置环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置环境变量"}},[a._v("#")]),a._v(" 设置环境变量")]),a._v(" "),s("p",[s("code",[a._v("buildx")]),a._v(" 命令属于实验特性，必须设置环境变量以使用该命令。")]),a._v(" "),s("p",[a._v("Linux/macOS")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("DOCKER_CLI_EXPERIMENTAL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("enabled\n")])])]),s("p",[a._v("Windows")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$env")]),a._v(":DOCKER_CLI_EXPERIMENTAL"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("enabled\n")])])]),s("h2",{attrs:{id:"新建-builder-实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新建-builder-实例"}},[a._v("#")]),a._v(" 新建 "),s("code",[a._v("builder")]),a._v(" 实例")]),a._v(" "),s("p",[a._v("Docker for Linux 不支持构建 "),s("code",[a._v("arm")]),a._v(" 架构镜像，我们可以运行一个新的容器让其支持该特性，Docker 桌面版无需进行此项设置。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker run --rm --privileged docker/binfmt:820fdd95a9972a5308930a2bdfb8573dd4447ad3\n")])])]),s("p",[a._v("由于 Docker 默认的 "),s("code",[a._v("builder")]),a._v(" 实例不支持同时指定多个 "),s("code",[a._v("--platform")]),a._v("，我们必须首先创建一个新的 "),s("code",[a._v("builder")]),a._v(" 实例。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker buildx create --name mybuilder\n\n$ docker buildx use mybuilder\n")])])]),s("h2",{attrs:{id:"构建镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像"}},[a._v("#")]),a._v(" 构建镜像")]),a._v(" "),s("p",[a._v("新建 Dockerfile 文件。")]),a._v(" "),s("div",{staticClass:"language-docker extra-class"},[s("pre",{pre:!0,attrs:{class:"language-docker"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("platform=$TARGETPLATFORM alpine\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" uname "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v(" /os.txt\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" cat /os.txt\n")])])]),s("p",[a._v("使用 "),s("code",[a._v("$ docker buildx build")]),a._v(" 命令构建镜像，注意将 "),s("code",[a._v("myusername")]),a._v(" 替换为自己的 Docker Hub 用户名。")]),a._v(" "),s("p",[s("code",[a._v("--push")]),a._v(" 参数表示将构建好的镜像推送到 Docker 仓库。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker buildx build --platform linux/arm,linux/arm64,linux/amd64 -t myusername/hello "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" --push\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看镜像信息")]),a._v("\n$ docker buildx imagetools inspect myusername/hello\n")])])]),s("p",[a._v("在不同架构运行该镜像，可以得到该架构的信息。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# arm")]),a._v("\n$ docker run -it --rm myusername/hello\nLinux buildkitsandbox "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.9")]),a._v(".125-linuxkit "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#1 SMP Fri Sep 7 08:20:28 UTC 2018 armv7l Linux")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# arm64")]),a._v("\n$ docker run -it --rm myusername/hello\nLinux buildkitsandbox "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.9")]),a._v(".125-linuxkit "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#1 SMP Fri Sep 7 08:20:28 UTC 2018 aarch64 Linux")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# amd64")]),a._v("\n$ docker run -it --rm myusername/hello\nLinux buildkitsandbox "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.9")]),a._v(".125-linuxkit "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#1 SMP Fri Sep 7 08:20:28 UTC 2018 x86_64 Linux")]),a._v("\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);