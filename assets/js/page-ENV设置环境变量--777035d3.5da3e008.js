(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{572:function(s,t,n){"use strict";n.r(t);var a=n(2),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"env-设置环境变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#env-设置环境变量"}},[s._v("#")]),s._v(" ENV 设置环境变量")]),s._v(" "),n("AdSenseTitle"),s._v(" "),n("p",[s._v("格式有两种：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("ENV <key> <value>")])]),s._v(" "),n("li",[n("code",[s._v("ENV <key1>=<value1> <key2>=<value2>...")])])]),s._v(" "),n("p",[s._v("这个指令很简单，就是设置环境变量而已，无论是后面的其它指令，如 "),n("code",[s._v("RUN")]),s._v("，还是运行时的应用，都可以直接使用这里定义的环境变量。")]),s._v(" "),n("div",{staticClass:"language-docker line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-docker"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" VERSION=1.0 DEBUG=on \\\n    NAME="),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Happy Feet"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这个例子中演示了如何换行，以及对含有空格的值用双引号括起来的办法，这和 Shell 下的行为是一致的。")]),s._v(" "),n("p",[s._v("定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。比如在官方 "),n("code",[s._v("node")]),s._v(" 镜像 "),n("code",[s._v("Dockerfile")]),s._v(" 中，就有类似这样的代码：")]),s._v(" "),n("div",{staticClass:"language-docker line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-docker"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" NODE_VERSION 7.2.0\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" curl "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("SLO "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz"')]),s._v(" \\\n  && curl "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("SLO "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"')]),s._v(" \\\n  && gpg "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("batch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("decrypt "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" node-v$NODE_VERSION-linux-x64.tar.xz\\$"')]),s._v(" SHASUMS256.txt "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" sha256sum "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" \\\n  && tar "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("xJf "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-v$NODE_VERSION-linux-x64.tar.xz"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("C /usr/local "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("strip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("components=1 \\\n  && rm "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-v$NODE_VERSION-linux-x64.tar.xz"')]),s._v(" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("s /usr/local/bin/node /usr/local/bin/nodejs\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("在这里先定义了环境变量 "),n("code",[s._v("NODE_VERSION")]),s._v("，其后的 "),n("code",[s._v("RUN")]),s._v(" 这层里，多次使用 "),n("code",[s._v("$NODE_VERSION")]),s._v(" 来进行操作定制。可以看到，将来升级镜像构建版本的时候，只需要更新 "),n("code",[s._v("7.2.0")]),s._v(" 即可，"),n("code",[s._v("Dockerfile")]),s._v(" 构建维护变得更轻松了。")]),s._v(" "),n("p",[s._v("下列指令可以支持环境变量展开： "),n("code",[s._v("ADD")]),s._v("、"),n("code",[s._v("COPY")]),s._v("、"),n("code",[s._v("ENV")]),s._v("、"),n("code",[s._v("EXPOSE")]),s._v("、"),n("code",[s._v("FROM")]),s._v("、"),n("code",[s._v("LABEL")]),s._v("、"),n("code",[s._v("USER")]),s._v("、"),n("code",[s._v("WORKDIR")]),s._v("、"),n("code",[s._v("VOLUME")]),s._v("、"),n("code",[s._v("STOPSIGNAL")]),s._v("、"),n("code",[s._v("ONBUILD")]),s._v("、"),n("code",[s._v("RUN")]),s._v("。")]),s._v(" "),n("p",[s._v("可以从这个指令列表里感觉到，环境变量可以使用的地方很多，很强大。通过环境变量，我们可以让一份 "),n("code",[s._v("Dockerfile")]),s._v(" 制作更多的镜像，只需使用不同的环境变量即可。")])],1)}),[],!1,null,null,null);t.default=e.exports}}]);