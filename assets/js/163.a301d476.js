(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{361:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"linuxkit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linuxkit"}},[t._v("#")]),t._v(" LinuxKit")]),t._v(" "),s("p",[s("code",[t._v("LinuxKit")]),t._v(" 这个工具可以将多个 Docker 镜像组成一个最小化、可自由定制的 Linux 系统，最后的生成的系统只有几十 M 大小，可以很方便的在云端进行部署。")]),t._v(" "),s("p",[t._v("下面我们在 macOS 上通过实例，来编译并运行一个全部由 Docker 镜像组成的包含 nginx 服务的 Linux 系统。")]),t._v(" "),s("h2",{attrs:{id:"安装-linuxkit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-linuxkit"}},[t._v("#")]),t._v(" 安装 Linuxkit")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ brew tap linuxkit/linuxkit\n\n$ brew "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --HEAD linuxkit\n")])])]),s("h2",{attrs:{id:"克隆源代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#克隆源代码"}},[t._v("#")]),t._v(" 克隆源代码")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone -b master --depth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" https://github.com/linuxkit/linuxkit.git\n\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" linuxkit\n")])])]),s("h2",{attrs:{id:"编译-linux-系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译-linux-系统"}},[t._v("#")]),t._v(" 编译 Linux 系统")]),t._v(" "),s("p",[t._v("LinuxKit 通过 "),s("code",[t._v("yaml")]),t._v(" 文件配置。")]),t._v(" "),s("p",[t._v("我们来查看 "),s("code",[t._v("linuxkit.yml")]),t._v(" 文件，了解各个字段的作用。")]),t._v(" "),s("p",[s("code",[t._v("kernel")]),t._v(" 字段定义了内核版本。")]),t._v(" "),s("p",[s("code",[t._v("init")]),t._v(" 字段中配置系统启动时的初始化顺序。")]),t._v(" "),s("p",[s("code",[t._v("onboot")]),t._v(" 字段配置系统级的服务。")]),t._v(" "),s("p",[s("code",[t._v("services")]),t._v(" 字段配置镜像启动后运行的服务。")]),t._v(" "),s("p",[s("code",[t._v("files")]),t._v(" 字段配置制作镜像时打包入镜像中的文件。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ linuxkit build linuxkit.yml\n")])])]),s("h2",{attrs:{id:"启动-linux-系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-linux-系统"}},[t._v("#")]),t._v(" 启动 Linux 系统")]),t._v(" "),s("p",[t._v("编译成功后，接下来启动这个 Linux 系统。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ linuxkit run -publish "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":80/tcp linuxkit\n")])])]),s("p",[t._v("接下来在浏览器中打开 "),s("code",[t._v("127.0.0.1:8080")]),t._v(" 即可看到 nginx 默认页面。")])])}),[],!1,null,null,null);a.default=e.exports}}]);