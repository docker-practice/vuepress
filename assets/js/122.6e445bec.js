(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{470:function(a,t,s){"use strict";s.r(t);var e=s(42),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"centos-安装-docker-ce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#centos-安装-docker-ce"}},[a._v("#")]),a._v(" CentOS 安装 Docker CE")]),a._v(" "),s("blockquote",[s("p",[a._v("警告：切勿在没有配置 Docker YUM 源的情况下直接使用 yum 命令安装 Docker.")])]),a._v(" "),s("h2",{attrs:{id:"准备工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[a._v("#")]),a._v(" 准备工作")]),a._v(" "),s("h3",{attrs:{id:"系统要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统要求"}},[a._v("#")]),a._v(" 系统要求")]),a._v(" "),s("p",[a._v("Docker CE 支持 64 位版本 CentOS 7，并且要求内核版本不低于 3.10。 CentOS 7 满足最低内核的要求，但由于内核版本比较低，部分功能（如 "),s("code",[a._v("overlay2")]),a._v(" 存储层驱动）无法使用，并且部分功能可能不太稳定。")]),a._v(" "),s("h3",{attrs:{id:"卸载旧版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#卸载旧版本"}},[a._v("#")]),a._v(" 卸载旧版本")]),a._v(" "),s("p",[a._v("旧版本的 Docker 称为 "),s("code",[a._v("docker")]),a._v(" 或者 "),s("code",[a._v("docker-engine")]),a._v("，使用以下命令卸载旧版本：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum remove docker "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-client "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-client-latest "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-common "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-latest "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-latest-logrotate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-logrotate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-selinux "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-engine-selinux "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-engine\n")])])]),s("h2",{attrs:{id:"使用-yum-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-yum-安装"}},[a._v("#")]),a._v(" 使用 yum 安装")]),a._v(" "),s("p",[a._v("执行以下命令安装依赖包：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y yum-utils "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n           device-mapper-persistent-data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n           lvm2\n")])])]),s("p",[a._v("鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。")]),a._v(" "),s("p",[a._v("执行下面的命令添加 "),s("code",[a._v("yum")]),a._v(" 软件源：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum-config-manager "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --add-repo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" -i "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s/download.docker.com/mirrors.ustc.edu.cn\\/docker-ce/g'")]),a._v(" /etc/yum.repos.d/docker-ce.repo\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 官方源")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# $ sudo yum-config-manager \\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#     --add-repo \\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#     https://download.docker.com/linux/centos/docker-ce.repo")]),a._v("\n")])])]),s("p",[a._v("如果需要测试版本的 Docker CE 请使用以下命令：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum-config-manager --enable docker-ce-test\n")])])]),s("p",[a._v("如果需要每日构建版本的 Docker CE 请使用以下命令：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum-config-manager --enable docker-ce-nightly\n")])])]),s("h3",{attrs:{id:"安装-docker-ce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker-ce"}},[a._v("#")]),a._v(" 安装 Docker CE")]),a._v(" "),s("p",[a._v("更新 "),s("code",[a._v("yum")]),a._v(" 软件源缓存，并安装 "),s("code",[a._v("docker-ce")]),a._v("。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum makecache fast\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" docker-ce\n")])])]),s("h2",{attrs:{id:"使用脚本自动安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用脚本自动安装"}},[a._v("#")]),a._v(" 使用脚本自动安装")]),a._v(" "),s("p",[a._v("在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，CentOS 系统上可以使用这套脚本安装，另外可以通过 "),s("code",[a._v("--mirror")]),a._v(" 选项使用国内源进行安装：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -fsSL get.docker.com -o get-docker.sh\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v(" get-docker.sh --mirror Aliyun\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# $ sudo sh get-docker.sh --mirror AzureChinaCloud")]),a._v("\n")])])]),s("p",[a._v("执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的稳定(stable)版本安装在系统中。")]),a._v(" "),s("h2",{attrs:{id:"启动-docker-ce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-docker-ce"}},[a._v("#")]),a._v(" 启动 Docker CE")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" docker\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start docker\n")])])]),s("h2",{attrs:{id:"建立-docker-用户组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建立-docker-用户组"}},[a._v("#")]),a._v(" 建立 docker 用户组")]),a._v(" "),s("p",[a._v("默认情况下，"),s("code",[a._v("docker")]),a._v(" 命令会使用 "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Unix_domain_socket",target:"_blank",rel:"noopener noreferrer"}},[a._v("Unix socket"),s("OutboundLink")],1),a._v(" 与 Docker 引擎通讯。而只有 "),s("code",[a._v("root")]),a._v(" 用户和 "),s("code",[a._v("docker")]),a._v(" 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 "),s("code",[a._v("root")]),a._v(" 用户。因此，更好地做法是将需要使用 "),s("code",[a._v("docker")]),a._v(" 的用户加入 "),s("code",[a._v("docker")]),a._v(" 用户组。")]),a._v(" "),s("p",[a._v("建立 "),s("code",[a._v("docker")]),a._v(" 组：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("groupadd")]),a._v(" docker\n")])])]),s("p",[a._v("将当前用户加入 "),s("code",[a._v("docker")]),a._v(" 组：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("usermod")]),a._v(" -aG docker "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$USER")]),a._v("\n")])])]),s("p",[a._v("退出当前终端并重新登录，进行如下测试。")]),a._v(" "),s("h2",{attrs:{id:"测试-docker-是否安装正确"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试-docker-是否安装正确"}},[a._v("#")]),a._v(" 测试 Docker 是否安装正确")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker run hello-world\n\nUnable to "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" image "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello-world:latest'")]),a._v(" locally\nlatest: Pulling from library/hello-world\nd1725b59e92d: Pull complete\nDigest: sha256:0add3ace90ecb4adbf7777e9aacf18357296e799f81cabc9fde470971e499788\nStatus: Downloaded newer image "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" hello-world:latest\n\nHello from Docker"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(". The Docker client contacted the Docker daemon.\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(". The Docker daemon pulled the "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello-world"')]),a._v(" image from the Docker Hub.\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("amd64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(". The Docker daemon created a new container from that image "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" runs the\n    executable that produces the output you are currently reading.\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(". The Docker daemon streamed that output to the Docker client, "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" sent it\n    to your terminal.\n\nTo try something "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n\nShare images, automate workflows, and "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" with a "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("free")]),a._v(" Docker ID:\n https://hub.docker.com/\n\nFor "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" examples and ideas, visit:\n https://docs.docker.com/get-started/\n")])])]),s("p",[a._v("若能正常输出以上信息，则说明安装成功。")]),a._v(" "),s("h2",{attrs:{id:"镜像加速"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像加速"}},[a._v("#")]),a._v(" 镜像加速")]),a._v(" "),s("p",[a._v("如果在使用过程中发现拉取 Docker 镜像十分缓慢，可以配置 Docker "),s("RouterLink",{attrs:{to:"/install/mirror.html"}},[a._v("国内镜像加速")]),a._v("。")],1),a._v(" "),s("h2",{attrs:{id:"添加内核参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加内核参数"}},[a._v("#")]),a._v(" 添加内核参数")]),a._v(" "),s("p",[a._v("如果在 CentOS 使用 Docker CE 看到下面的这些警告信息：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("WARNING: bridge-nf-call-iptables is disabled\nWARNING: bridge-nf-call-ip6tables is disabled\n")])])]),s("p",[a._v("请添加内核配置参数以启用这些功能。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tee")]),a._v(" -a /etc/sysctl.conf "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<-")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF")]),a._v("\n")])])]),s("p",[a._v("然后重新加载 "),s("code",[a._v("sysctl.conf")]),a._v(" 即可")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" sysctl -p\n")])])]),s("h2",{attrs:{id:"参考文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[a._v("#")]),a._v(" 参考文档")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/centos/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Docker 官方 CentOS 安装文档"),s("OutboundLink")],1),a._v("。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);