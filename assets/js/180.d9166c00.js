(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{524:function(a,e,s){"use strict";s.r(e);var r=s(42),n=Object(r.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"创建-swarm-集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-swarm-集群"}},[a._v("#")]),a._v(" 创建 Swarm 集群")]),a._v(" "),s("p",[a._v("阅读 "),s("RouterLink",{attrs:{to:"/swarm_mode/overview.html"}},[a._v("基本概念")]),a._v(" 一节我们知道 "),s("code",[a._v("Swarm")]),a._v(" 集群由 "),s("strong",[a._v("管理节点")]),a._v(" 和 "),s("strong",[a._v("工作节点")]),a._v(" 组成。本节我们来创建一个包含一个管理节点和两个工作节点的最小 "),s("code",[a._v("Swarm")]),a._v(" 集群。")],1),a._v(" "),s("h2",{attrs:{id:"初始化集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化集群"}},[a._v("#")]),a._v(" 初始化集群")]),a._v(" "),s("p",[a._v("在 "),s("a",{attrs:{href:"../machine"}},[s("code",[a._v("Docker Machine")])]),a._v(" 一节中我们了解到 "),s("code",[a._v("Docker Machine")]),a._v(" 可以在数秒内创建一个虚拟的 Docker 主机，下面我们使用它来创建三个 Docker 主机，并加入到集群中。")]),a._v(" "),s("p",[a._v("我们首先创建一个 Docker 主机作为管理节点。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker-machine create -d virtualbox manager\n")])])]),s("p",[a._v("我们使用 "),s("code",[a._v("docker swarm init")]),a._v(" 在管理节点初始化一个 "),s("code",[a._v("Swarm")]),a._v(" 集群。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker-machine "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ssh")]),a._v(" manager\n\ndocker@manager:~$ docker swarm init --advertise-addr "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".99.100\nSwarm initialized: current node "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("dxn1zf6l61qsb1josjja83ngz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" is now a manager.\n\nTo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" a worker to this swarm, run the following command:\n\n    docker swarm "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".99.100:2377\n\nTo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" a manager to this swarm, run "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'docker swarm join-token manager'")]),a._v(" and follow the instructions.\n")])])]),s("p",[a._v("如果你的 Docker 主机有多个网卡，拥有多个 IP，必须使用 "),s("code",[a._v("--advertise-addr")]),a._v(" 指定 IP。")]),a._v(" "),s("blockquote",[s("p",[a._v("执行 "),s("code",[a._v("docker swarm init")]),a._v(" 命令的节点自动成为管理节点。")])]),a._v(" "),s("h2",{attrs:{id:"增加工作节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增加工作节点"}},[a._v("#")]),a._v(" 增加工作节点")]),a._v(" "),s("p",[a._v("上一步我们初始化了一个 "),s("code",[a._v("Swarm")]),a._v(" 集群，拥有了一个管理节点，下面我们继续创建两个 Docker 主机作为工作节点，并加入到集群中。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker-machine create -d virtualbox worker1\n\n$ docker-machine "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ssh")]),a._v(" worker1\n\ndocker@worker1:~$ docker swarm "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".99.100:2377\n\nThis node joined a swarm as a worker.\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker-machine create -d virtualbox worker2\n\n$ docker-machine "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ssh")]),a._v(" worker2\n\ndocker@worker1:~$ docker swarm "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --token SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".99.100:2377\n\nThis node joined a swarm as a worker.\n")])])]),s("blockquote",[s("p",[a._v("注意：一些细心的读者可能通过 "),s("code",[a._v("docker-machine create --help")]),a._v(" 查看到 "),s("code",[a._v("--swarm*")]),a._v(" 等一系列参数。该参数是用于旧的 "),s("code",[a._v("Docker Swarm")]),a._v("，与本章所讲的 "),s("code",[a._v("Swarm mode")]),a._v(" 没有关系。")])]),a._v(" "),s("h2",{attrs:{id:"查看集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看集群"}},[a._v("#")]),a._v(" 查看集群")]),a._v(" "),s("p",[a._v("经过上边的两步，我们已经拥有了一个最小的 "),s("code",[a._v("Swarm")]),a._v(" 集群，包含一个管理节点和两个工作节点。")]),a._v(" "),s("p",[a._v("在管理节点使用 "),s("code",[a._v("docker node ls")]),a._v(" 查看集群。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ docker node "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\nID                           "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("HOSTNAME")]),a._v("  STATUS  AVAILABILITY  MANAGER STATUS\n03g1y59jwfg7cf99w4lt0f662    worker2   Ready   Active\n9j68exjopxe7wfl6yuxml7a7j    worker1   Ready   Active\ndxn1zf6l61qsb1josjja83ngz *  manager   Ready   Active        Leader\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);