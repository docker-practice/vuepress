(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{245:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"使用-buildkit-构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-buildkit-构建镜像"}},[t._v("#")]),t._v(" 使用 "),a("code",[t._v("BuildKit")]),t._v(" 构建镜像")]),t._v(" "),a("p",[a("strong",[t._v("BuildKit")]),t._v(" 是下一代的镜像构建组件，在 https://github.com/moby/buildkit 开源。")]),t._v(" "),a("p",[a("strong",[t._v("注意：如果您的镜像构建使用的是云服务商提供的镜像构建服务（Docker Hub 自动构建、腾讯云容器服务、阿里云容器服务等），由于上述服务提供商的 Docker 版本低于 18.09，BuildKit 无法使用，将造成镜像构建失败。建议使用 BuildKit 构建镜像时使用一个新的 Dockerfile 文件（例如 Dockerfile.buildkit）")])]),t._v(" "),a("p",[a("strong",[t._v("注意：docker-compose build 命令暂时不支持 BuildKit")])]),t._v(" "),a("h2",{attrs:{id:"dockerfile-新增指令详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-新增指令详解"}},[t._v("#")]),t._v(" "),a("code",[t._v("Dockerfile")]),t._v(" 新增指令详解")]),t._v(" "),a("p",[t._v("启用 "),a("code",[t._v("BuildKit")]),t._v(" 之后，我们可以使用下面几个新的 "),a("code",[t._v("Dockerfile")]),t._v(" 指令来加快镜像构建。")]),t._v(" "),a("h3",{attrs:{id:"run-mount-type-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-mount-type-cache"}},[t._v("#")]),t._v(" "),a("code",[t._v("RUN --mount=type=cache")])]),t._v(" "),a("p",[t._v("目前，几乎所有的程序都会使用依赖管理工具，例如 "),a("code",[t._v("Go")]),t._v(" 中的 "),a("code",[t._v("go mod")]),t._v("、"),a("code",[t._v("Node.js")]),t._v(" 中的 "),a("code",[t._v("npm")]),t._v(" 等等，当我们构建一个镜像时，往往会重复的从互联网中获取依赖包，难以缓存，大大降低了镜像的构建效率。")]),t._v(" "),a("p",[t._v("例如一个前端工程需要用到 "),a("code",[t._v("npm")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine as builder\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" package.json /app/\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("registry=https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//registry.npm.taobao.org \\\n        && rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rf ~/.npm\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" src /app/src\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm run build\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("from=builder /app/dist /app/dist\n")])])]),a("p",[t._v("使用多阶段构建，构建的镜像中只包含了目标文件夹 "),a("code",[t._v("dist")]),t._v("，但仍然存在一些问题，当 "),a("code",[t._v("package.json")]),t._v(" 文件变动时，"),a("code",[t._v("RUN npm i && rm -rf ~/.npm")]),t._v(" 这一层会重新执行，变更多次后，生成了大量的中间层镜像。")]),t._v(" "),a("p",[t._v("为解决这个问题，进一步的我们可以设想一个类似 "),a("strong",[t._v("数据卷")]),t._v(" 的功能，在镜像构建时把 "),a("code",[t._v("node_modules")]),t._v(" 文件夹挂载上去，在构建完成后，这个 "),a("code",[t._v("node_modules")]),t._v(" 文件夹会自动卸载，实际的镜像中并不包含 "),a("code",[t._v("node_modules")]),t._v(" 这个文件夹，这样我们就省去了每次获取依赖的时间，大大增加了镜像构建效率，同时也避免了生成了大量的中间层镜像。")]),t._v(" "),a("p",[a("code",[t._v("BuildKit")]),t._v(" 提供了 "),a("code",[t._v("RUN --mount=type=cache")]),t._v(" 指令，可以实现上边的设想。")]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# syntax = docker/dockerfile:experimental")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine as builder\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" package.json /app/\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mount=type=cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("target=/app/node_modules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("id=my_app_npm_module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sharing=locked \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mount=type=cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("target=/root/.npm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("id=npm_cache \\\n        npm i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("registry=https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//registry.npm.taobao.org\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" src /app/src\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mount=type=cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("target=/app/node_modules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("id=my_app_npm_module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sharing=locked \\\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --mount=type=cache,target=/app/dist,id=my_app_dist,sharing=locked \\")]),t._v("\n        npm run build\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# COPY --from=builder /app/dist /app/dist")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为了更直观的说明 from 和 source 指令，这里使用 RUN 指令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mount=type=cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("target=/tmp/dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("from=builder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("source=/app/dist \\\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --mount=type=cache,target/tmp/dist,from=my_app_dist,sharing=locked \\")]),t._v("\n    mkdir "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p /app/dist && cp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("r /tmp/dist/* /app/dist\n")])])]),a("p",[a("strong",[t._v("由于 "),a("code",[t._v("BuildKit")]),t._v(" 为实验特性，每个 "),a("code",[t._v("Dockerfile")]),t._v(" 文件开头都必须加上如下指令")])]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# syntax = docker/dockerfile:experimental")]),t._v("\n")])])]),a("p",[t._v("第一个 "),a("code",[t._v("RUN")]),t._v(" 指令执行后，"),a("code",[t._v("id")]),t._v(" 为 "),a("code",[t._v("my_app_npm_module")]),t._v(" 的缓存文件夹挂载到了 "),a("code",[t._v("/app/node_modules")]),t._v(" 文件夹中。多次执行也不会产生多个中间层镜像。")]),t._v(" "),a("p",[t._v("第二个 "),a("code",[t._v("RUN")]),t._v(" 指令执行时需要用到 "),a("code",[t._v("node_modules")]),t._v(" 文件夹，"),a("code",[t._v("node_modules")]),t._v(" 已经挂载，命令也可以正确执行。")]),t._v(" "),a("p",[t._v("第三个 "),a("code",[t._v("RUN")]),t._v(" 指令将上一阶段产生的文件复制到指定位置，"),a("code",[t._v("from")]),t._v(" 指明缓存的来源，这里 "),a("code",[t._v("builder")]),t._v(" 表示缓存来源于构建的第一阶段，"),a("code",[t._v("source")]),t._v(" 指明缓存来源的文件夹。")]),t._v(" "),a("p",[t._v("上面的 "),a("code",[t._v("Dockerfile")]),t._v(" 中 "),a("code",[t._v("--mount=type=cache,...")]),t._v(" 中指令作用如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Option")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("id")])]),t._v(" "),a("td",[a("code",[t._v("id")]),t._v(" 设置一个标志，以便区分缓存。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("target")]),t._v(" (必填项)")]),t._v(" "),a("td",[t._v("缓存的挂载目标文件夹。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ro")]),t._v(","),a("code",[t._v("readonly")])]),t._v(" "),a("td",[t._v("只读，缓存文件夹不能被写入。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("sharing")])]),t._v(" "),a("td",[t._v("有 "),a("code",[t._v("shared")]),t._v(" "),a("code",[t._v("private")]),t._v(" "),a("code",[t._v("locked")]),t._v(" 值可供选择。"),a("code",[t._v("sharing")]),t._v(" 设置当一个缓存被多次使用时的表现，由于 "),a("code",[t._v("BuildKit")]),t._v(" 支持并行构建，当多个步骤使用同一缓存时（同一 "),a("code",[t._v("id")]),t._v("）会发生冲突。"),a("code",[t._v("shared")]),t._v(" 表示多个步骤可以同时读写，"),a("code",[t._v("private")]),t._v(" 表示当多个步骤使用同一缓存时，每个步骤使用不同的缓存，"),a("code",[t._v("locked")]),t._v(" 表示当一个步骤完成释放缓存后，后一个步骤才能继续使用该缓存。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("from")])]),t._v(" "),a("td",[t._v("缓存来源（构建阶段），不填写时为空文件夹。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("source")])]),t._v(" "),a("td",[t._v("来源的文件夹路径。")])])])]),t._v(" "),a("h3",{attrs:{id:"run-mount-type-bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-mount-type-bind"}},[t._v("#")]),t._v(" "),a("code",[t._v("RUN --mount=type=bind")])]),t._v(" "),a("p",[t._v("该指令可以将一个镜像（或上一构建阶段）的文件挂载到指定位置。")]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# syntax = docker/dockerfile:experimental")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mount=type=bind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("from=php"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("alpine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("source=/usr/local/bin/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("php"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("entrypoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("target=/docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("php"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("entrypoint \\\n        cat /docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("php"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("entrypoint\n")])])]),a("h3",{attrs:{id:"run-mount-type-tmpfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-mount-type-tmpfs"}},[t._v("#")]),t._v(" "),a("code",[t._v("RUN --mount=type=tmpfs")])]),t._v(" "),a("p",[t._v("该指令可以将一个 "),a("code",[t._v("tmpfs")]),t._v(" 文件系统挂载到指定位置。")]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# syntax = docker/dockerfile:experimental")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mount=type=tmpfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("target=/temp \\\n        mount "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" grep /temp\n")])])]),a("h3",{attrs:{id:"run-mount-type-secret"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-mount-type-secret"}},[t._v("#")]),t._v(" "),a("code",[t._v("RUN --mount=type=secret")])]),t._v(" "),a("p",[t._v("该指令可以将一个文件(例如密钥)挂载到指定位置。")]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# syntax = docker/dockerfile:experimental")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mount=type=secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("id=aws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("target=/root/.aws/credentials \\\n        cat /root/.aws/credentials\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ docker build -t "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" --secret "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("aws,src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.aws/credentials "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("h3",{attrs:{id:"run-mount-type-ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-mount-type-ssh"}},[t._v("#")]),t._v(" "),a("code",[t._v("RUN --mount=type=ssh")])]),t._v(" "),a("p",[t._v("该指令可以挂载 "),a("code",[t._v("ssh")]),t._v(" 密钥。")]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# syntax = docker/dockerfile:experimental")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" alpine\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apk add "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cache openssh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("client\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mkdir "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("m 0700 ~/.ssh && ssh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("keyscan gitlab.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" ~/.ssh/known_hosts\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mount=type=ssh ssh git@gitlab.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" tee /hello\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("eval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("ssh-agent"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n$ ssh-add ~/.ssh/id_rsa\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Input your passphrase here"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$ docker build -t "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" --ssh "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$SSH_AUTH_SOCK")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("h2",{attrs:{id:"官方文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官方文档"}},[t._v("#")]),t._v(" 官方文档")]),t._v(" "),a("ul",[a("li",[t._v("https://github.com/moby/buildkit/blob/master/frontend/dockerfile/docs/experimental.md")])])])}),[],!1,null,null,null);s.default=n.exports}}]);