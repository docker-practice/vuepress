(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{385:function(e,t,r){"use strict";r.r(t);var o=r(0),c=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"基本架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本架构"}},[e._v("#")]),e._v(" 基本架构")]),e._v(" "),r("p",[e._v("Docker 采用了 "),r("code",[e._v("C/S")]),e._v(" 架构，包括客户端和服务端。Docker 守护进程 （"),r("code",[e._v("Daemon")]),e._v("）作为服务端接受来自客户端的请求，并处理这些请求（创建、运行、分发容器）。")]),e._v(" "),r("p",[e._v("客户端和服务端既可以运行在一个机器上，也可通过 "),r("code",[e._v("socket")]),e._v(" 或者 "),r("code",[e._v("RESTful API")]),e._v(" 来进行通信。")]),e._v(" "),r("p",[r("img",{attrs:{src:"_images/docker_arch.png",alt:"Docker 基本架构"}})]),e._v(" "),r("p",[e._v("Docker 守护进程一般在宿主主机后台运行，等待接收来自客户端的消息。")]),e._v(" "),r("p",[e._v("Docker 客户端则为用户提供一系列可执行命令，用户用这些命令实现跟 Docker 守护进程交互。")])])}),[],!1,null,null,null);t.default=c.exports}}]);