(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{393:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"使用-buildx-构建多种系统架构支持的-docker-镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-buildx-构建多种系统架构支持的-docker-镜像"}},[e._v("#")]),e._v(" 使用 buildx 构建多种系统架构支持的 Docker 镜像")]),e._v(" "),a("p",[e._v("在之前的版本中构建多种系统架构支持的 Docker 镜像，要想使用统一的名字必须使用 "),a("RouterLink",{attrs:{to:"/image/manifest.html"}},[a("code",[e._v("$ docker manifest")])]),e._v(" 命令。")],1),e._v(" "),a("p",[e._v("在 Docker 19.03+ 版本中可以使用 "),a("code",[e._v("$ docker buildx build")]),e._v(" 命令使用 "),a("code",[e._v("BuildKit")]),e._v(" 构建镜像。该命令支持 "),a("code",[e._v("--platform")]),e._v(" 参数可以同时构建支持多种系统架构的 Docker 镜像，大大简化了构建步骤。")]),e._v(" "),a("h2",{attrs:{id:"新建-builder-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建-builder-实例"}},[e._v("#")]),e._v(" 新建 "),a("code",[e._v("builder")]),e._v(" 实例")]),e._v(" "),a("p",[e._v("Docker for Linux 不支持构建 "),a("code",[e._v("arm")]),e._v(" 架构镜像，我们可以运行一个新的容器让其支持该特性，Docker 桌面版无需进行此项设置。")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ docker run --rm --privileged tonistiigi/binfmt:latest --install all\n")])])]),a("p",[e._v("由于 Docker 默认的 "),a("code",[e._v("builder")]),e._v(" 实例不支持同时指定多个 "),a("code",[e._v("--platform")]),e._v("，我们必须首先创建一个新的 "),a("code",[e._v("builder")]),e._v(" 实例。同时由于国内拉取镜像较缓慢，我们可以使用配置了 "),a("a",{attrs:{href:"https://github.com/moby/buildkit/blob/master/docs/buildkitd.toml.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("镜像加速地址"),a("OutboundLink")],1),e._v("  的 "),a("a",{attrs:{href:"https://github.com/docker-practice/buildx",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("dockerpracticesig/buildkit:master")]),a("OutboundLink")],1),e._v(" 镜像替换官方镜像。")]),e._v(" "),a("blockquote",[a("p",[e._v("如果你有私有的镜像加速器，可以基于 https://github.com/docker-practice/buildx 构建自己的 buildkit 镜像并使用它。")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 适用于国内环境")]),e._v("\n$ docker buildx create --use --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("mybuilder-cn --driver docker-container --driver-opt "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("image")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("dockerpracticesig/buildkit:master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 适用于腾讯云环境(腾讯云主机、coding.net 持续集成)")]),e._v("\n$ docker buildx create --use --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("mybuilder-cn --driver docker-container --driver-opt "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("image")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("dockerpracticesig/buildkit:master-tencent\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# $ docker buildx create --name mybuilder --driver docker-container")]),e._v("\n\n$ docker buildx use mybuilder\n")])])]),a("h2",{attrs:{id:"构建镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像"}},[e._v("#")]),e._v(" 构建镜像")]),e._v(" "),a("p",[e._v("新建 Dockerfile 文件。")]),e._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("platform=$TARGETPLATFORM alpine\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("RUN")]),e._v(" uname "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("a "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v(" /os.txt\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CMD")]),e._v(" cat /os.txt\n")])])]),a("p",[e._v("使用 "),a("code",[e._v("$ docker buildx build")]),e._v(" 命令构建镜像，注意将 "),a("code",[e._v("myusername")]),e._v(" 替换为自己的 Docker Hub 用户名。")]),e._v(" "),a("p",[a("code",[e._v("--push")]),e._v(" 参数表示将构建好的镜像推送到 Docker 仓库。")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ docker buildx build --platform linux/arm,linux/arm64,linux/amd64 -t myusername/hello "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v(" --push\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看镜像信息")]),e._v("\n$ docker buildx imagetools inspect myusername/hello\n")])])]),a("p",[e._v("在不同架构运行该镜像，可以得到该架构的信息。")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# arm")]),e._v("\n$ docker run -it --rm myusername/hello\nLinux buildkitsandbox "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.9")]),e._v(".125-linuxkit "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#1 SMP Fri Sep 7 08:20:28 UTC 2018 armv7l Linux")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# arm64")]),e._v("\n$ docker run -it --rm myusername/hello\nLinux buildkitsandbox "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.9")]),e._v(".125-linuxkit "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#1 SMP Fri Sep 7 08:20:28 UTC 2018 aarch64 Linux")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# amd64")]),e._v("\n$ docker run -it --rm myusername/hello\nLinux buildkitsandbox "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.9")]),e._v(".125-linuxkit "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#1 SMP Fri Sep 7 08:20:28 UTC 2018 x86_64 Linux")]),e._v("\n")])])]),a("h2",{attrs:{id:"架构相关变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构相关变量"}},[e._v("#")]),e._v(" 架构相关变量")]),e._v(" "),a("p",[a("code",[e._v("Dockerfile")]),e._v(" 支持如下架构相关的变量")]),e._v(" "),a("p",[a("strong",[e._v("TARGETPLATFORM")])]),e._v(" "),a("p",[e._v("构建镜像的目标平台，例如 "),a("code",[e._v("linux/amd64")]),e._v(", "),a("code",[e._v("linux/arm/v7")]),e._v(", "),a("code",[e._v("windows/amd64")]),e._v("。")]),e._v(" "),a("p",[a("strong",[e._v("TARGETOS")])]),e._v(" "),a("p",[a("code",[e._v("TARGETPLATFORM")]),e._v(" 的 OS 类型，例如 "),a("code",[e._v("linux")]),e._v(", "),a("code",[e._v("windows")])]),e._v(" "),a("p",[a("strong",[e._v("TARGETARCH")])]),e._v(" "),a("p",[a("code",[e._v("TARGETPLATFORM")]),e._v(" 的架构类型，例如 "),a("code",[e._v("amd64")]),e._v(", "),a("code",[e._v("arm")])]),e._v(" "),a("p",[a("strong",[e._v("TARGETVARIANT")])]),e._v(" "),a("p",[a("code",[e._v("TARGETPLATFORM")]),e._v(" 的变种，该变量可能为空，例如 "),a("code",[e._v("v7")])]),e._v(" "),a("p",[a("strong",[e._v("BUILDPLATFORM")])]),e._v(" "),a("p",[e._v("构建镜像主机平台，例如 "),a("code",[e._v("linux/amd64")])]),e._v(" "),a("p",[a("strong",[e._v("BUILDOS")])]),e._v(" "),a("p",[a("code",[e._v("BUILDPLATFORM")]),e._v(" 的 OS 类型，例如 "),a("code",[e._v("linux")])]),e._v(" "),a("p",[a("strong",[e._v("BUILDARCH")])]),e._v(" "),a("p",[a("code",[e._v("BUILDPLATFORM")]),e._v(" 的架构类型，例如 "),a("code",[e._v("amd64")])]),e._v(" "),a("p",[a("strong",[e._v("BUILDVARIANT")])]),e._v(" "),a("p",[a("code",[e._v("BUILDPLATFORM")]),e._v(" 的变种，该变量可能为空，例如 "),a("code",[e._v("v7")])]),e._v(" "),a("h3",{attrs:{id:"使用举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用举例"}},[e._v("#")]),e._v(" 使用举例")]),e._v(" "),a("p",[e._v("例如我们要构建支持 "),a("code",[e._v("linux/arm/v7")]),e._v(" 和 "),a("code",[e._v("linux/amd64")]),e._v(" 两种架构的镜像。假设已经生成了两个平台对应的二进制文件：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("bin/dist-linux-arm")])]),e._v(" "),a("li",[a("code",[e._v("bin/dist-linux-amd64")])])]),e._v(" "),a("p",[e._v("那么 "),a("code",[e._v("Dockerfile")]),e._v(" 可以这样书写：")]),e._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" scratch\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 使用变量必须申明")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v(" TARGETOS\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v(" TARGETARCH\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COPY")]),e._v(" bin/dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("TARGETOS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("TARGETARCH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" /dist\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ENTRYPOINT")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"dist"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);