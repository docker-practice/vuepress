(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{354:function(s,t,e){"use strict";e.r(t);var o=e(0),r=Object(o.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"本章小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本章小结"}},[s._v("#")]),s._v(" 本章小结")]),s._v(" "),e("p",[s._v("本章讲解了 Mesos 的安装使用、基本原理和架构，以及支持 Mesos 的重要应用框架。Mesos 最初设计为资源调度器，然而其灵活的设计和对上层框架的优秀支持，使得它可以很好的支持大规模的分布式应用场景。结合 Docker，Mesos 可以很容易部署一套私有的容器云。")]),s._v(" "),e("p",[s._v("除了核心功能之外，Mesos 在设计上有许多值得借鉴之处，比如它清晰的定位、简洁的架构、细致的参数、高度容错的可靠，还有对限速、监控等的支持等。")]),s._v(" "),e("p",[s._v("Mesos 作为一套成熟的开源项目，可以很好的被应用和集成到生产环境中。但它的定位集中在资源调度，往往需要结合应用框架或二次开发。")])])}),[],!1,null,null,null);t.default=r.exports}}]);