(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{464:function(a,s,t){"use strict";t.r(s);var n=t(42),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"多阶段构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多阶段构建"}},[a._v("#")]),a._v(" 多阶段构建")]),a._v(" "),t("h2",{attrs:{id:"之前的做法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#之前的做法"}},[a._v("#")]),a._v(" 之前的做法")]),a._v(" "),t("p",[a._v("在 Docker 17.05 版本之前，我们构建 Docker 镜像时，通常会采用两种方式：")]),a._v(" "),t("h3",{attrs:{id:"全部放入一个-dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全部放入一个-dockerfile"}},[a._v("#")]),a._v(" 全部放入一个 Dockerfile")]),a._v(" "),t("p",[a._v("一种方式是将所有的构建过程编包含在一个 "),t("code",[a._v("Dockerfile")]),a._v(" 中，包括项目及其依赖库的编译、测试、打包等流程，这里可能会带来的一些问题：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("镜像层次多，镜像体积较大，部署时间变长")])]),a._v(" "),t("li",[t("p",[a._v("源代码存在泄露的风险")])])]),a._v(" "),t("p",[a._v("例如，编写 "),t("code",[a._v("app.go")]),a._v(" 文件，该程序输出 "),t("code",[a._v("Hello World!")])]),a._v(" "),t("div",{staticClass:"language-go extra-class"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("package")]),a._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fmt"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("func")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    fmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("Printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello World!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("编写 "),t("code",[a._v("Dockerfile.one")]),a._v(" 文件")]),a._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" golang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("1.9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("alpine\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" apk "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("no"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("cache add git ca"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("certificates\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /go/src/github.com/go/helloworld/\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COPY")]),a._v(" app.go .\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" go get "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("v github.com/go"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("sql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("driver/mysql \\\n  && CGO_ENABLED=0 GOOS=linux go build "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("installsuffix cgo "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("o app . \\\n  && cp /go/src/github.com/go/helloworld/app /root\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /root/\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./app"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("构建镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker build -t go/helloworld:1 -f Dockerfile.one "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("h3",{attrs:{id:"分散到多个-dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分散到多个-dockerfile"}},[a._v("#")]),a._v(" 分散到多个 Dockerfile")]),a._v(" "),t("p",[a._v("另一种方式，就是我们事先在一个 "),t("code",[a._v("Dockerfile")]),a._v(" 将项目及其依赖库编译测试打包好后，再将其拷贝到运行环境中，这种方式需要我们编写两个 "),t("code",[a._v("Dockerfile")]),a._v(" 和一些编译脚本才能将其两个阶段自动整合起来，这种方式虽然可以很好地规避第一种方式存在的风险，但明显部署过程较复杂。")]),a._v(" "),t("p",[a._v("例如，编写 "),t("code",[a._v("Dockerfile.build")]),a._v(" 文件")]),a._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" golang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("1.9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("alpine\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" apk "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("no"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("cache add git\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /go/src/github.com/go/helloworld\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COPY")]),a._v(" app.go .\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" go get "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("v github.com/go"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("sql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("driver/mysql \\\n  && CGO_ENABLED=0 GOOS=linux go build "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("installsuffix cgo "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("o app .\n")])])]),t("p",[a._v("编写 "),t("code",[a._v("Dockerfile.copy")]),a._v(" 文件")]),a._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" alpine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("latest\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" apk "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("no"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("cache add ca"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("certificates\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /root/\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COPY")]),a._v(" app .\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./app"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("新建 "),t("code",[a._v("build.sh")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/sh")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" Building go/helloworld:build\n\ndocker build -t go/helloworld:build "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" -f Dockerfile.build\n\ndocker create --name extract go/helloworld:build\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" extract:/go/src/github.com/go/helloworld/app ./app\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -f extract\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" Building go/helloworld:2\n\ndocker build --no-cache -t go/helloworld:2 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" -f Dockerfile.copy\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" ./app\n")])])]),t("p",[a._v("现在运行脚本即可构建镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x build.sh\n\n$ ./build.sh\n")])])]),t("p",[a._v("对比两种方式生成的镜像大小")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n\nREPOSITORY      TAG    IMAGE ID        CREATED         SIZE\ngo/helloworld   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("      f7cf3465432c    "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" seconds ago  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(".47MB\ngo/helloworld   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("      f55d3e16affc    "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" minutes ago   295MB\n")])])]),t("h2",{attrs:{id:"使用多阶段构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用多阶段构建"}},[a._v("#")]),a._v(" 使用多阶段构建")]),a._v(" "),t("p",[a._v("为解决以上问题，Docker v17.05 开始支持多阶段构建 ("),t("code",[a._v("multistage builds")]),a._v(")。使用多阶段构建我们就可以很容易解决前面提到的问题，并且只需要编写一个 "),t("code",[a._v("Dockerfile")]),a._v("：")]),a._v(" "),t("p",[a._v("例如，编写 "),t("code",[a._v("Dockerfile")]),a._v(" 文件")]),a._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" golang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("1.9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("alpine as builder\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" apk "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("no"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("cache add git\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /go/src/github.com/go/helloworld/\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" go get "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("v github.com/go"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("sql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("driver/mysql\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COPY")]),a._v(" app.go .\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" CGO_ENABLED=0 GOOS=linux go build "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("installsuffix cgo "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("o app .\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" alpine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("latest as prod\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" apk "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("no"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("cache add ca"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("certificates\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /root/\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COPY")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("from=0 /go/src/github.com/go/helloworld/app .\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./app"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("构建镜像")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker build -t go/helloworld:3 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("p",[a._v("对比三个镜像大小")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n\nREPOSITORY        TAG   IMAGE ID         CREATED            SIZE\ngo/helloworld     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("     d6911ed9c846     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v(" seconds ago      "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(".47MB\ngo/helloworld     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("     f7cf3465432c     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" seconds ago     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(".47MB\ngo/helloworld     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("     f55d3e16affc     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" minutes ago      295MB\n")])])]),t("p",[a._v("很明显使用多阶段构建的镜像体积小，同时也完美解决了上边提到的问题。")]),a._v(" "),t("h3",{attrs:{id:"只构建某一阶段的镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#只构建某一阶段的镜像"}},[a._v("#")]),a._v(" 只构建某一阶段的镜像")]),a._v(" "),t("p",[a._v("我们可以使用 "),t("code",[a._v("as")]),a._v(" 来为某一阶段命名，例如")]),a._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" golang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("1.9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("alpine as builder\n")])])]),t("p",[a._v("例如当我们只想构建 "),t("code",[a._v("builder")]),a._v(" 阶段的镜像时，增加 "),t("code",[a._v("--target=builder")]),a._v(" 参数即可")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker build --target builder -t username/imagename:tag "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("h3",{attrs:{id:"构建时从其他镜像复制文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建时从其他镜像复制文件"}},[a._v("#")]),a._v(" 构建时从其他镜像复制文件")]),a._v(" "),t("p",[a._v("上面例子中我们使用 "),t("code",[a._v("COPY --from=0 /go/src/github.com/go/helloworld/app .")]),a._v(" 从上一阶段的镜像中复制文件，我们也可以复制任意镜像中的文件。")]),a._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[a._v("$ COPY "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("from=nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("latest /etc/nginx/nginx.conf /nginx.conf\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);