(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{542:function(s,t,a){"use strict";a.r(t);var e=a(1),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"使用-etcdctl-v2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-etcdctl-v2"}},[s._v("#")]),s._v(" 使用 etcdctl v2")]),s._v(" "),a("AdSenseTitle"),s._v(" "),a("p",[a("code",[s._v("etcdctl")]),s._v(" 是一个命令行客户端，它能提供一些简洁的命令，供用户直接跟 "),a("code",[s._v("etcd")]),s._v(" 服务打交道，而无需基于 "),a("code",[s._v("HTTP API")]),s._v(" 方式。这在某些情况下将很方便，例如用户对服务进行测试或者手动修改数据库内容。我们也推荐在刚接触 "),a("code",[s._v("etcd")]),s._v(" 时通过 "),a("code",[s._v("etcdctl")]),s._v(" 命令来熟悉相关的操作，这些操作跟 "),a("code",[s._v("HTTP API")]),s._v(" 实际上是对应的。")]),s._v(" "),a("p",[a("code",[s._v("etcd")]),s._v(" 项目二进制发行包中已经包含了 "),a("code",[s._v("etcdctl")]),s._v(" 工具，没有的话，可以从 "),a("a",{attrs:{href:"https://github.com/etcd-io/etcd/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("github.com/etcd-io/etcd/releases"),a("OutboundLink")],1),s._v(" 下载。")]),s._v(" "),a("p",[a("code",[s._v("etcdctl")]),s._v(" 支持如下的命令，大体上分为数据库操作和非数据库操作两类，后面将分别进行解释。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ etcdctl -h\nNAME:\n   etcdctl - A simple command line client for etcd.\n\nUSAGE:\n   etcdctl [global options] command [command options] [arguments...]\n\nVERSION:\n   2.0.0-rc.1\n\nCOMMANDS:\n   backup\tbackup an etcd directory\n   mk\t\tmake a new key with a given value\n   mkdir\tmake a new directory\n   rm\t\tremove a key\n   rmdir\tremoves the key if it is an empty directory or a key-value pair\n   get\t\tretrieve the value of a key\n   ls\t\tretrieve a directory\n   set\t\tset the value of a key\n   setdir\tcreate a new or existing directory\n   update\tupdate an existing key with a given value\n   updatedir\tupdate an existing directory\n   watch\twatch a key for changes\n   exec-watch\twatch a key for changes and exec an executable\n   member\tmember add, remove and list subcommands\n   help, h\tShows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --debug\t\t\toutput cURL commands which can be used to reproduce the request\n   --no-sync\t\t\tdon't synchronize cluster information before sending request\n   --output, -o 'simple'\toutput response in the given format (`simple` or `json`)\n   --peers, -C \t\t\ta comma-delimited list of machine addresses in the cluster (default: \"127.0.0.1:4001\")\n   --cert-file \t\t\tidentify HTTPS client using this SSL certificate file\n   --key-file \t\t\tidentify HTTPS client using this SSL key file\n   --ca-file \t\t\tverify certificates of HTTPS-enabled servers using this CA bundle\n   --help, -h\t\t\tshow help\n   --version, -v\t\tprint the version\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])]),a("h2",{attrs:{id:"数据库操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作"}},[s._v("#")]),s._v(" 数据库操作")]),s._v(" "),a("p",[s._v("数据库操作围绕对键值和目录的 CRUD （符合 REST 风格的一套操作：Create）完整生命周期的管理。")]),s._v(" "),a("p",[s._v("etcd 在键的组织上采用了层次化的空间结构（类似于文件系统中目录的概念），用户指定的键可以为单独的名字，如 "),a("code",[s._v("testkey")]),s._v("，此时实际上放在根目录 "),a("code",[s._v("/")]),s._v(" 下面，也可以为指定目录结构，如 "),a("code",[s._v("cluster1/node2/testkey")]),s._v("，则将创建相应的目录结构。")]),s._v(" "),a("p",[a("em",[s._v("注：CRUD 即 Create, Read, Update, Delete，是符合 REST 风格的一套 API 操作。")])]),s._v(" "),a("h3",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[s._v("#")]),s._v(" set")]),s._v(" "),a("p",[s._v("指定某个键的值。例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" /testdir/testkey "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),s._v("\nHello world\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("支持的选项包括：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--ttl "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t\t\t该键值的超时时间（单位为秒），不配置（默认为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("）则永不超时\n--swap-with-value value 若该键现在的值是 value，则进行设置操作\n--swap-with-index "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t若该键现在的索引值是指定索引，则进行设置操作\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[s._v("#")]),s._v(" get")]),s._v(" "),a("p",[s._v("获取指定键的值。例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" testkey hello\nhello\n$ etcdctl update testkey world\nworld\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("当键不存在时，则会报错。例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl get testkey2\nError:  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(": Key not found "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/testkey2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("支持的选项为")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--sort\t对结果进行排序\n--consistent 将请求发给主节点，保证获取内容的一致性\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[s._v("#")]),s._v(" update")]),s._v(" "),a("p",[s._v("当键存在时，更新值内容。例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" testkey hello\nhello\n$ etcdctl update testkey world\nworld\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("当键不存在时，则会报错。例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl update testkey2 world\nError:  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(": Key not found "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/testkey2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("支持的选项为")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--ttl "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t超时时间（单位为秒），不配置（默认为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("）则永不超时\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rm"}},[s._v("#")]),s._v(" rm")]),s._v(" "),a("p",[s._v("删除某个键值。例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" testkey\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("当键不存在时，则会报错。例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" testkey2\nError:  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(": Key not found "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/testkey2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("支持的选项为")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--dir\t\t如果键是个空目录或者键值对则删除\n--recursive\t\t删除目录和所有子键\n--with-value \t检查现有的值是否匹配\n--with-index "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t检查现有的 index 是否匹配\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"mk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mk"}},[s._v("#")]),s._v(" mk")]),s._v(" "),a("p",[s._v("如果给定的键不存在，则创建一个新的键值。例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl mk /testdir/testkey "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),s._v("\nHello world\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("当键存在的时候，执行该命令会报错，例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" testkey "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),s._v("\nHello world\n$ ./etcdctl mk testkey "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),s._v("\nError:  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("105")]),s._v(": Key already exists "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/testkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("支持的选项为")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--ttl "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t超时时间（单位为秒），不配置（默认为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("）则永不超时\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"mkdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mkdir"}},[s._v("#")]),s._v(" mkdir")]),s._v(" "),a("p",[s._v("如果给定的键目录不存在，则创建一个新的键目录。例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" testdir\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("当键目录存在的时候，执行该命令会报错，例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" testdir\n$ etcdctl "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" testdir\nError:  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("105")]),s._v(": Key already exists "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/testdir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("支持的选项为")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--ttl "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t超时时间（单位为秒），不配置（默认为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("）则永不超时\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"setdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setdir"}},[s._v("#")]),s._v(" setdir")]),s._v(" "),a("p",[s._v("创建一个键目录，无论存在与否。")]),s._v(" "),a("p",[s._v("支持的选项为")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--ttl "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t超时时间（单位为秒），不配置（默认为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("）则永不超时\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"updatedir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updatedir"}},[s._v("#")]),s._v(" updatedir")]),s._v(" "),a("p",[s._v("更新一个已经存在的目录。\n支持的选项为")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--ttl "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t超时时间（单位为秒），不配置（默认为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("）则永不超时\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"rmdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rmdir"}},[s._v("#")]),s._v(" rmdir")]),s._v(" "),a("p",[s._v("删除一个空目录，或者键值对。")]),s._v(" "),a("p",[s._v("若目录不空，会报错")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" /dir/testkey hi\nhi\n$ etcdctl "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rmdir")]),s._v(" /dir\nError:  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("108")]),s._v(": Directory not empty "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/dir"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ls"}},[s._v("#")]),s._v(" ls")]),s._v(" "),a("p",[s._v("列出目录（默认为根目录）下的键或者子目录，默认不显示子目录中内容。")]),s._v(" "),a("p",[s._v("例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ ./etcdctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" testkey "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hi'")]),s._v("\nhi\n$ ./etcdctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dir/test "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v("\nhello\n$ ./etcdctl "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n/testkey\n/dir\n$ ./etcdctl "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),s._v("\n/dir/test\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("支持的选项包括")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--sort\t将输出结果排序\n--recursive\t如果目录下有子目录，则递归输出其中的内容\n-p\t\t对于输出为目录，在最后添加 "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" 进行区分\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"非数据库操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非数据库操作"}},[s._v("#")]),s._v(" 非数据库操作")]),s._v(" "),a("h3",{attrs:{id:"backup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backup"}},[s._v("#")]),s._v(" backup")]),s._v(" "),a("p",[s._v("备份 etcd 的数据。")]),s._v(" "),a("p",[s._v("支持的选项包括")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--data-dir \t\tetcd 的数据目录\n--backup-dir \t备份到指定路径\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[s._v("#")]),s._v(" watch")]),s._v(" "),a("p",[s._v("监测一个键值的变化，一旦键值发生更新，就会输出最新的值并退出。")]),s._v(" "),a("p",[s._v("例如，用户更新 testkey 键值为 Hello world。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" testkey\nHello world\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("支持的选项包括")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--forever\t\t一直监测，直到用户按 "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("CTRL+C"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" 退出\n--after-index "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t在指定 index 之前一直监测\n--recursive\t\t返回所有的键值和子键值\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"exec-watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exec-watch"}},[s._v("#")]),s._v(" exec-watch")]),s._v(" "),a("p",[s._v("监测一个键值的变化，一旦键值发生更新，就执行给定命令。")]),s._v(" "),a("p",[s._v("例如，用户更新 testkey 键值。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl exec-watch testkey -- "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" -c "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ls'")]),s._v("\ndefault.etcd\nDocumentation\netcd\netcdctl\netcd-migrate\nREADME-etcdctl.md\nREADME.md\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("支持的选项包括")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("--after-index "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),s._v("\t在指定 index 之前一直监测\n--recursive\t\t返回所有的键值和子键值\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"member"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#member"}},[s._v("#")]),s._v(" member")]),s._v(" "),a("p",[s._v("通过 list、add、remove 命令列出、添加、删除 etcd 实例到 etcd 集群中。")]),s._v(" "),a("p",[s._v("例如本地启动一个 etcd 服务实例后，可以用如下命令进行查看。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ etcdctl member list\nce2a822cea30bfca: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("peerURLs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://localhost:2380,http://localhost:7001 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("clientURLs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://localhost:2379,http://localhost:4001\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"命令选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令选项"}},[s._v("#")]),s._v(" 命令选项")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("--debug")]),s._v("\t\t\t输出 cURL 命令，显示执行命令的时候发起的请求")]),s._v(" "),a("li",[a("code",[s._v("--no-sync")]),s._v("\t\t\t发出请求之前不同步集群信息")]),s._v(" "),a("li",[a("code",[s._v("--output, -o 'simple'")]),s._v("\t输出内容的格式 ("),a("code",[s._v("simple")]),s._v(" 为原始信息，"),a("code",[s._v("json")]),s._v(" 为进行json格式解码，易读性好一些)")]),s._v(" "),a("li",[a("code",[s._v("--peers, -C")]),s._v('\t\t\t指定集群中的同伴信息，用逗号隔开 (默认为: "127.0.0.1:4001")')]),s._v(" "),a("li",[a("code",[s._v("--cert-file")]),s._v(" \t\t\tHTTPS 下客户端使用的 SSL 证书文件")]),s._v(" "),a("li",[a("code",[s._v("--key-file")]),s._v("\t\t\tHTTPS 下客户端使用的 SSL 密钥文件")]),s._v(" "),a("li",[a("code",[s._v("--ca-file")]),s._v(" \t\t\t服务端使用 HTTPS 时，使用 CA 文件进行验证")]),s._v(" "),a("li",[a("code",[s._v("--help, -h")]),s._v("\t\t\t显示帮助命令信息")]),s._v(" "),a("li",[a("code",[s._v("--version, -v")]),s._v("\t\t打印版本信息")])])],1)}),[],!1,null,null,null);t.default=n.exports}}]);